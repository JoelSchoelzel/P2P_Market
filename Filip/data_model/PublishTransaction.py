# generated by datamodel-codegen:
#   filename:  PublishTransaction_schema.json
#   timestamp: 2024-03-07T12:57:12+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional, Union

from pydantic import BaseModel, Field


class CreatedDateTime(BaseModel):
    time: str = Field(..., title='Time')


class MarketRole(str, Enum):
    buyer = 'buyer'
    seller = 'seller'


class PowerDirection(BaseModel):
    tradingObjectRole: MarketRole
    tradingObjectID: str = Field(..., description='...', title='Tradingobjectid')


class Price(BaseModel):
    price: float = Field(..., title='Price')


class Quantity(BaseModel):
    quantity: float = Field(..., title='Quantity')


class TradeInformation(BaseModel):
    realPrice: Price = Field(..., description='...')
    realQuantity: Quantity = Field(..., description='...')
    powerDirection: PowerDirection = Field(..., description='...')


class TradeResults(BaseModel):
    tradeResults: List[TradeInformation] = Field(..., title='Traderesults')


class PublishTransaction(BaseModel):
    transactionID: str = Field(..., description='...', title='Transactionid')
    transactionCreatedDateTime: CreatedDateTime = Field(
        ..., description='Date and time that this Bid was created'
    )
    tradeResults: Optional[Union[TradeResults, List]] = Field(
        None, description='...', title='Traderesults'
    )
    refMarketParticipant: str = Field(
        ..., description='...', title='Refmarketparticipant'
    )
